AWSTemplateFormatVersion: "2010-09-09"
Description: Discord Bot Evolved (Odin) CloudFormation Deployment

Parameters:
  EnvBucketName:
    Type: String
  DefaultVPCID:
    Type: String
  KeyName:
    Type: String

Mappings:
  RegionMap:
    ap-northeast-1:
      ALinuxArm: ami-002eb0cce502117b2
      ALinux86: ami-08c84d37db8aafe00
    ap-northeast-2:
      ALinuxArm: ami-013e35012cb169cef
      ALinux86: ami-0b7c737f668580ff1
    ap-northeast-3:
      ALinuxArm: ami-03b8bb56070c11374
      ALinux86: ami-0df896ee24c051d42
    ap-south-1:
      ALinuxArm: ami-0f203c26f765cfb32
      ALinux86: ami-0ded8326293d3201b
    ap-southeast-1:
      ALinuxArm: ami-0f064a4c9f3e6c504
      ALinux86: ami-0a481e6d13af82399
    ap-southeast-2:
      ALinuxArm: ami-037cd799fbb0578cf
      ALinux86: ami-00ffa321011c2611f
    ca-central-1:
      ALinuxArm: ami-0d955517b1485ed00
      ALinux86: ami-0c63a96dc83836290
    eu-central-1:
      ALinuxArm: ami-0d03a2d1b22041c13
      ALinux86: ami-0e00e602389e469a3
    eu-north-1:
      ALinuxArm: ami-03da1616c1fc9d795
      ALinux86: ami-040d60c831d02d41c
    eu-west-1:
      ALinuxArm: ami-0fa60ab544ecd97e0
      ALinux86: ami-05a3d90809a151346
    eu-west-2:
      ALinuxArm: ami-0cc7e32fa3b6695a5
      ALinux86: ami-0b594cc165f9cddaa
    eu-west-3:
      ALinuxArm: ami-0e7dca26aea79122d
      ALinux86: ami-0b8b5288592eca360
    sa-east-1:
      ALinuxArm: ami-0461cf0c292037658
      ALinux86: ami-07fa9fd1e86f3fa29
    us-east-1:
      ALinuxArm: ami-0964d1dc1edd4bd2f
      ALinux86: ami-0f34c5ae932e6f0e4
    us-east-2:
      ALinuxArm: ami-0e31d4ddf8c30fd2a
      ALinux86: ami-02a89066c48741345
    us-west-1:
      ALinuxArm: ami-02df98ef10c8d0aa9
      ALinux86: ami-0c38b9e37c107d921
    us-west-2:
      ALinuxArm: ami-00b8975bc3de669d2
      ALinux86: ami-00970f57473724c10

Resources:
  DiscordBotInstance:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: Odin Instance
      ImageId: !FindInMap [ RegionMap, !Ref AWS::Region, ALinuxArm ]
      InstanceType: t4g.small
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref DiscordBotInstanceProfile
      SecurityGroupIds: [ !Ref SSHInboundSG, !Ref HTTPInboundSG ]
      UserData:
        Fn::Base64: !Sub
          - "#!/bin/bash -xe

            exec >> /home/ec2-user/userdata.log 2>&1 \n

            su ec2-user \n
            cd /home/ec2-user \n
            sudo yum install -y nodejs \n
            wget --no-check-certificate https://github.com/michaelortiz05/Discord-Bot-Evolved/archive/refs/heads/deployment1.zip \n
            tar -xf master.tar.gz \n
            cd Discord-Bot-Evolved-main/ \n
            sudo npm install -g node-gyp \n
            sudo yum install -y gcc-c++ make \n
            sudo yum groupinstall -y \"Development Tools\" \n
            sudo npm install @discordjs/opus \n
            aws s3 cp s3://${EnvBucketName}/auth.txt . \n
            aws s3 cp s3://${EnvBucketName}/config.json . \n
            aws s3 cp s3://${EnvBucketName}/env ./.env \n
            sudo npm install \n
            sudo mkdir tmp \n
            node index.js \n
            "

          - EnvBucketName: !Ref EnvBucketName

  SSHInboundSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SSHInboundSG
      GroupDescription: Allows inbound SSH access to instance
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      VpcId: !Ref DefaultVPCID
  HTTPInboundSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebTrafficInboundSG
      GroupDescription: Allows inbound HTTP/S
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0       
      SecurityGroupEgress:
        IpProtocol: udp
        FromPort: 50000
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      VpcId: !Ref DefaultVPCID
  
  DiscordBotInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [ !Ref EC2DiscordBotRole ]
  EC2DiscordBotRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ec2-discordbot-role
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": [ "ec2.amazonaws.com" ]
                },
                "Action": [ "sts:AssumeRole" ]
            }
        ]
    }
  EC2DiscordBotPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ec2-get-s3-env-policy
      Roles: [ !Ref EC2DiscordBotRole ]
      PolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "GetObject",
                "Effect": "Allow",
                "Action": "s3:GetObject",
                "Resource": !Join [ "", ["arn:aws:s3:::", !Ref EnvBucketName, "/*"] ]
            }
        ]
    }